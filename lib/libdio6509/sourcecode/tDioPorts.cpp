// Copyright (c) 2012 National Instruments.
// All rights reserved.
// License: NATIONAL INSTRUMENTS SOFTWARE LICENSE AGREEMENT
//   Refer to "MHDDK License Agreement.pdf" in the root of this distribution.

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// This file is autogenerated!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#ifndef ___tDioPorts_h___
#include "tDioPorts.h"
#endif

tDioPorts::tDioPorts(tBusSpaceReference addrSpace, nMDBG::tStatus2* s)

{
   _addressOffset = 0;
   _addrSpace = addrSpace;

   _initialize(s);
}

tDioPorts::tDioPorts()

{
   _addressOffset = 0;

}

void tDioPorts::initialize(tBusSpaceReference addrSpace, u32 addressOffset, nMDBG::tStatus2* s)
{

   _addrSpace = addrSpace;
   _addressOffset = addressOffset;

   _initialize(s);
}

void tDioPorts::reset(nMDBG::tStatus2* s)
{
   if (s && s->isFatal()) return;

   DI_ChangeIrqRE_Register.setRegister(u32(0x0), s);
   DI_ChangeIrqRE_Register.markDirty(s);
   DI_ChangeDetectLatched_Register.setRegister(u32(0x0), s);
   DI_ChangeIrqFE_Register.setRegister(u32(0x0), s);
   DI_ChangeIrqFE_Register.markDirty(s);
   Static_Digital_Input_Register.setRegister(u32(0x0), s);
   Static_Digital_Output_Register.setRegister(u32(0x0), s);
   Static_Digital_Output_Register.markDirty(s);
   DIO_Direction_Register.setRegister(u32(0x0), s);
   DIO_Direction_Register.markDirty(s);
   DI_FilterRegister_Port0and1.setRegister(u32(0x0), s);
   DI_FilterRegister_Port0and1.markDirty(s);
   DI_FilterRegister_Port2and3.setRegister(u32(0x0), s);
   DI_FilterRegister_Port2and3.markDirty(s);
   DO_WDT_SafeStateRegister.setRegister(u32(0x0), s);
   DO_WDT_SafeStateRegister.markDirty(s);
   DO_WDT_ModeSelect_Port0and1_Register.setRegister(u32(0x0), s);
   DO_WDT_ModeSelect_Port0and1_Register.markDirty(s);
   DO_WDT_ModeSelect_Port2and3_Register.setRegister(u32(0x0), s);
   DO_WDT_ModeSelect_Port2and3_Register.markDirty(s);
}

void tDioPorts::_initialize(nMDBG::tStatus2* s)
{
   if (s && s->isFatal()) return;



   //----------------------------------------
   // set register maps of all registers
   //----------------------------------------
   DI_ChangeIrqRE_Register.setRegisterMap(this);
   DI_ChangeDetectLatched_Register.setRegisterMap(this);
   DI_ChangeIrqFE_Register.setRegisterMap(this);
   Static_Digital_Input_Register.setRegisterMap(this);
   Static_Digital_Output_Register.setRegisterMap(this);
   DIO_Direction_Register.setRegisterMap(this);
   DI_FilterRegister_Port0and1.setRegisterMap(this);
   DI_FilterRegister_Port2and3.setRegisterMap(this);
   DO_WDT_SafeStateRegister.setRegisterMap(this);
   DO_WDT_ModeSelect_Port0and1_Register.setRegisterMap(this);
   DO_WDT_ModeSelect_Port2and3_Register.setRegisterMap(this);

   //----------------------------------------
   // initialize dirty flags
   //----------------------------------------
   for (unsigned int i = 0; i < sizeof(_dirtyVector)/sizeof(_dirtyVector[0]); i++) {
      _dirtyVector[i] = 0;
   }

   //----------------------------------------
   // reset registers
   //----------------------------------------
   reset(s);
}

tDioPorts::~tDioPorts()
{
}



// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// This file is autogenerated!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!

